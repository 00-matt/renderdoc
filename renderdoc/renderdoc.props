<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Thanks to https://stackoverflow.com/a/43815817/4070143 -->

  <!-- fetch the path of the assembly, and unescape it so MSBuild doesn't choke on brackets in "Program Files (x86)" -->
  <PropertyGroup>
    <LibGit2SharpPath>$([MSBuild]::Unescape("$(DevEnvDir)\CommonExtensions\Microsoft\TeamFoundation\Team Explorer\LibGit2Sharp.dll"))</LibGit2SharpPath>
  </PropertyGroup>

  <!-- Declare the task with some inline code -->
  <UsingTask TaskName="GetGitCommit" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <Sha1 ParameterType="System.String" Required="False" Output="True" />
      <Repository ParameterType="System.String" Required="True" Output="False" />
      <LibGit2SharpAssemblyPath ParameterType="System.String" Required="True" Output="False" />
    </ParameterGroup>
    <Task>
      <Reference Include="$(LibGit2SharpPath)" />
      <Code Type="Class" Language="cs">
using System;
using System.Linq;
using System.Runtime.CompilerServices;

namespace GitIntrospection {
  public class GetGitCommit : Microsoft.Build.Utilities.Task {
    public override bool Execute() {
      System.AppDomain.CurrentDomain.AssemblyResolve += (sender, args) => {
        if (args.Name.Contains("LibGit2Sharp")) {
          return System.Reflection.Assembly.LoadFrom(LibGit2SharpAssemblyPath);
        }
        return null;
      };
      GetCommit();
      return !Log.HasLoggedErrors;
    }
    private void GetCommit() {
      try {
        Sha1 = (new LibGit2Sharp.Repository(Repository)).Commits.First().Id.Sha;
      } catch(LibGit2Sharp.RepositoryNotFoundException) {
      }
    }

    [Microsoft.Build.Framework.Required] public string Repository { get; set; }
    [Microsoft.Build.Framework.Required] public string LibGit2SharpAssemblyPath { get; set; }
    [Microsoft.Build.Framework.Output] public string Sha1 { get; set; }
  }
}
      </Code>
    </Task>
  </UsingTask>

  <!-- Only actually run the task if we located the assembly for LibGit2Sharp. Otherwise silently skip this step. -->
  <Target Name="RunTask" BeforeTargets="PrepareForBuild" Condition="exists('$(LibGit2SharpPath)')">
    <GetGitCommit Repository="$(SolutionDir)" LibGit2SharpAssemblyPath="$(LibGit2SharpPath)" ContinueOnError="WarnAndContinue">
      <Output TaskParameter="Sha1" PropertyName="CommitId" />
    </GetGitCommit>
    <Message Text="Building from Git commit $(CommitId)" />

    <ItemGroup Condition="$(CommitId.Length) > 0">
      <ClCompile>
        <PreprocessorDefinitions>GIT_COMMIT_HASH="$(CommitId)";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      </ClCompile>
    </ItemGroup>
  </Target>
</Project>
